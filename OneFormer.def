Bootstrap: docker
From: nvidia/cuda:11.3.1-cudnn8-devel-ubuntu20.04

# 環境構築
%post
    export DEBIAN_FRONTEND=noninteractive
    export DEBCONF_NONINTERACTIVE_SEEN=true
    export PYTHONNOUSERSITE=1
    export FORCE_CUDA="1"
    export TORCH_CUDA_ARCH_LIST="Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing"
    export PYENV_ROOT=/opt/pyenv
    export PATH=$PYENV_ROOT/bin:$PYENV_ROOT/shims:${PATH}
    export PYTHON_VERSION=3.8.5

    rm -rf /var/lib/apt/lists/*
    apt-get -y update
    apt-get -y install vim git wget
    apt-get -y install make build-essential libssl-dev zlib1g-dev \
        libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
        libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev sudo ninja-build

    git clone https://github.com/pyenv/pyenv.git /opt/pyenv
    pyenv install ${PYTHON_VERSION}
    pyenv global ${PYTHON_VERSION}

    pip install --upgrade --no-cache-dir pip
    pip install --no-cache-dir torch==1.10.1+cu113 torchvision==0.11.2+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html
    pip install --no-cache-dir opencv-python
    python -m pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu113/torch1.10/index.html
    pip install --no-cache-dir git+https://github.com/cocodataset/panopticapi.git
    pip install --no-cache-dir git+https://github.com/mcordts/cityscapesScripts.git
    MMCV_WITH_OPS=1 pip install --no-cache-dir git+https://github.com/open-mmlab/mmcv.git@v1.6.2
    pip install --no-cache-dir cython \
                            scipy==1.8.1 \
                            shapely \
                            h5py==3.7.0 \
                            submitit==1.4.2 \
                            scikit-image \
                            timm==0.4.12 \
                            einops==0.4.1 \
                            icecream==2.1.2 \
                            setuptools==59.5.0 \
                            wandb==0.12.20 \
                            ftfy==6.1.1 \
                            regex==2022.6.2 \
                            inflect==5.6.0 \
                            diffdist==0.1 \
                            pytorch_lightning==1.6.4 \
                            tqdm==4.64.0 \
                            natten==0.14.4 \
                            # mmcv==1.6.2 -f https://shi-labs.com/natten/wheels/cu113/torch1.10.1/index.html
# 環境変数設定
%environment
    export LC_ALL=C
    export TORCH_CUDA_ARCH_LIST="Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing"
    export FVCORE_CACHE="/tmp"
    export PYTHONNOUSERSITE=1
    export PYENV_ROOT=/opt/pyenv
    export PATH=$PYENV_ROOT/bin:$PYENV_ROOT/shims:${PATH}

# # 環境構築
# %post
#     export DEBIAN_FRONTEND=noninteractive
#     export DEBCONF_NONINTERACTIVE_SEEN=true
#     export PYTHONNOUSERSITE=1
#     export FORCE_CUDA="1"
#     export TORCH_CUDA_ARCH_LIST="Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing"
#     export PYTHON_VERSION=3.8.5
#     export CONDA_ROOT /opt/conda
#     export PATH=$CONDA_ROOT/bin:$PATH

#     rm -rf /var/lib/apt/lists/*
#     apt-get -y update
#     apt-get -y install vim git wget
#     apt-get -y install make build-essential ninja-build
#     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && /bin/bash ~/miniconda.sh -b -p /opt/conda

#     conda create --name oneformer python=3.8 -y
#     conda activate oneformer
#     # Install Pytorch
#     conda install pytorch==1.10.1 torchvision==0.11.2 cudatoolkit=11.3 -c pytorch -c conda-forge

#     # Install opencv (required for running the demo)
#     pip3 install -U opencv-python

#     # Install detectron2
#     python -m pip install detectron2 -f \
#         https://dl.fbaipublicfiles.com/detectron2/wheels/cu113/torch1.10/index.html

#     # Install other dependencies
#     pip3 install git+https://github.com/cocodataset/panopticapi.git
#     pip3 install git+https://github.com/mcordts/cityscapesScripts.git
#     pip3 install -r requirements.txt

# # 環境変数設定
# %environment
#     export LC_ALL=C
#     export TORCH_CUDA_ARCH_LIST="Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing"
#     export FVCORE_CACHE="/tmp"
#     export PYTHONNOUSERSITE=1
#     export CONDA_ROOT /opt/conda
#     export PATH=$CONDA_ROOT/bin:$PATH